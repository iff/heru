#!/usr/bin/env coffee

{ join } = require 'path'
{ realpathSync } = require 'fs'
{ inspect } = require 'sys'

# Path to the runtime directory.
runtime = realpathSync join __dirname, '../';

# Add directories with the runtime files to the require path.
require.paths.unshift join runtime, 'src'
require.paths.unshift join runtime, 'vendor'

# The colors module extends the String prototyp, it does not export anything.
require 'colors'

# Load the main heru module.
heru = require 'heru'
console.log "Heru #{ heru.Version.yellow }"

# Hack. We need to have a better way to figure out where the library is.
require.paths.unshift(process.env.PWD + '/library')

# Load the configuration for the given node.
loadNode = (hostname) ->
  path = hostname.split('.').reverse()
  require join process.env.PWD, 'nodes', path.join('/')

# There is no way to get the FQDN in node. The user needs to supply the
# hostname on the commandline.
spec = loadNode process.argv[2]
node = new heru.Node spec

ind = (indent) ->
  a = []
  while indent--
    a.push '  '
  return a.join('')

dumpError = (err, indent = 0) ->
  console.log "  #{ind(indent)}#{err.message}" if err
  return unless err.children

  for err in err.children
    dumpError err, indent + 1

# Try to apply the node configuration, catch any errors which may be thrown.
try
  future = node.verify()
  future.when (err) ->
    if err
      console.log "Verify failed: #{err.message}"
      dumpError arguments['0']
      #node.amend()
    else
      console.log "Node verification passed"

catch error
  console.log "Got an error:".red
  console.log error
  console.log error.stack

